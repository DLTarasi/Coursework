summary(model)
test_city <- c()
library(ggplot2)
library(outliers)
library(reshape2)
#set Directory to data path
setwd('/Users/dave/isye6501/Week 5')
#create table of crime data with headers
uscrimedata<-read.table("uscrime.txt", header = TRUE)
#Check class and inspect data
class(uscrimedata)
head(uscrimedata)
summary(uscrimedata)
#single sided grubs tests
grubbs.test(uscrimedata$Crime, type = 10)
#plot all variables
uscrime_melt = melt(data=uscrimedata, measure.vars = colnames(uscrimedata[,1:15]))
ggplot(data = uscrime_melt, aes(x=value, y=Crime)) +
geom_point() +
facet_wrap(~variable, scales = "free")
crimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
crimemodel <- lm(Crime ~ Ed + U2 + Ineq + Prob, uscrimedata)
summary(crimemodel)
test_city <- c(M = 14.0, So = 0,
Ed = 10.0, Po1 = 12.0,
Po2 = 15.5,LF = 0.640,
M.F = 94.0, Pop = 150,
NW = 1.1, U1 = 0.120,
U2 = 3.6, Wealth = 3200,
Ineq = 20.1, Prob = 0.04,
Time = 39.0)
new_crime = predict(object=crimemodel, newdata = test_city)
test_city <- as.dataframe(test_city)
test_city <- as.data.frame(test_city)
View(test_city)
new_crime = predict(object=crimemodel, newdata = test_city)
test_city <- t(as.data.frame(test_city))
View(test_city)
new_crime = predict(object=crimemodel, newdata = test_city)
#Check class and inspect data
class(uscrimedata)
class(test_city)
test_city <- (t(test_city))
test_city <- as.data.frame(t(test_city))
class(test_city)
new_crime = predict(object=crimemodel, newdata = test_city)
#Create model with all variables
crimemodel <- lm(Crime ~., uscrimedata)
#predict crime level in test city using the crime model
new_crime = predict(object=crimemodel, newdata = test_city)
#create test city data frame
test_city <- c(M = 14.0, So = 0,
Ed = 10.0, Po1 = 12.0,
Po2 = 15.5,LF = 0.640,
M.F = 94.0, Pop = 150,
NW = 1.1, U1 = 0.120,
U2 = 3.6, Wealth = 3200,
Ineq = 20.1, Prob = 0.04,
Time = 39.0)
test_city <- as.data.frame(t(test_city))
#predict crime level in test city using the crime model
new_crime = predict(object=crimemodel, newdata = test_city)
#create model with only variables with p value below .1
crimemodel <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodel)
#create test city data frame
test_city <- c(M = 14.0, So = 0,
Ed = 10.0, Po1 = 12.0,
Po2 = 15.5,LF = 0.640,
M.F = 94.0, Pop = 150,
NW = 1.1, U1 = 0.120,
U2 = 3.6, Wealth = 3200,
Ineq = 20.1, Prob = 0.04,
Time = 39.0)
test_city <- as.data.frame(t(test_city))
#predict crime level in test city using the crime model
new_crime = predict(object=crimemodel, newdata = test_city)
aic(crimemodel)
AIC(crimemodel)
#Create model with all variables
crimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
#create model with only variables with p value below .1
crimemodel <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
AIC(crimemodel)
#create model with only variables with p value below .1
crimemodel <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodel)
AIC(crimemodel)
#Create model with all variables
crimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
AIC(crimemodel)
#create model with only variables with p value below .1
crimemodel <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodel)
AIC(crimemodel)
#create model with only variables with p value below .1
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
AIC(crimemodel)
BIC(crimemodel)
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
library(ggplot2)
library(outliers)
library(reshape2)
#set Directory to data path
setwd('/Users/dave/isye6501/Week 5')
#create table of crime data with headers
uscrimedata<-read.table("uscrime.txt", header = TRUE)
#Check class and inspect data
class(uscrimedata)
head(uscrimedata)
summary(uscrimedata)
#single sided grubs tests
grubbs.test(uscrimedata$Crime, type = 10)
#plot all variables
uscrime_melt = melt(data=uscrimedata, measure.vars = colnames(uscrimedata[,1:15]))
ggplot(data = uscrime_melt, aes(x=value, y=Crime)) +
geom_point() +
facet_wrap(~variable, scales = "free")
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
View(crimemodel)
View(crimemodelp.1)
View(crimemodel)
View(uscrimedata)
library(ggplot2)
library(outliers)
library(reshape2)
#set Directory to data path
setwd('/Users/dave/isye6501/Week 5')
#create table of crime data with headers
uscrimedata<-read.table("uscrime.txt", header = TRUE)
#Check class and inspect data
class(uscrimedata)
head(uscrimedata)
summary(uscrimedata)
#single sided grubs tests
grubbs.test(uscrimedata$Crime, type = 10)
#plot all variables
uscrime_melt = melt(data=uscrimedata, measure.vars = colnames(uscrimedata[,1:15]))
ggplot(data = uscrime_melt, aes(x=value, y=Crime)) +
geom_point() +
facet_wrap(~variable, scales = "free")
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(crimemodel)
summary(basecrimemodel)
AIC(basecrimemodel)
BIC(basecrimemodel)
#create model with only variables with p value below .1
crimemodelp.1 <- lm(Crime ~ M + Ed + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
library(ggplot2)
library(outliers)
library(reshape2)
#set Directory to data path
setwd('/Users/dave/isye6501/Week 5')
#create table of crime data with headers
uscrimedata<-read.table("uscrime.txt", header = TRUE)
#Check class and inspect data
class(uscrimedata)
head(uscrimedata)
summary(uscrimedata)
#single sided grubs tests
grubbs.test(uscrimedata$Crime, type = 10)
#plot all variables
uscrime_melt = melt(data=uscrimedata, measure.vars = colnames(uscrimedata[,1:15]))
ggplot(data = uscrime_melt, aes(x=value, y=Crime)) +
geom_point() +
facet_wrap(~variable, scales = "free")
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(basecrimemodel)
AIC(basecrimemodel)
BIC(basecrimemodel)
#create model with only variables with p value below .1
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
#create model with only variables with p value below .05
crimemodelp.05 <- lm(Crime ~ M + Ed + Ineq + Prob, uscrimedata)
summary(crimemodelp.05)
AIC(crimemodelp.05)
BIC(crimemodelp.05)
#create test city data frame
test_city <- c(M = 14.0, So = 0,
Ed = 10.0, Po1 = 12.0,
Po2 = 15.5,LF = 0.640,
M.F = 94.0, Pop = 150,
NW = 1.1, U1 = 0.120,
U2 = 3.6, Wealth = 3200,
Ineq = 20.1, Prob = 0.04,
Time = 39.0)
test_city <- as.data.frame(t(test_city))
#predict crime level in test city using the crime model
new_crime = predict(object=crimemodel, newdata = test_city)
#predict crime level in test city using the crime model
new_crime = predict(object=crimemodelp.1, newdata = test_city)
ggplot(data = uscrime, aes(x=variable, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(group=variable, color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=variable, y = Crime,color = "red")) +
ggplot(data = uscrime, aes(x=variable, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(group=variable, color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=variable, y = Crime,color = "red"))
ggplot(data = uscrimedata, aes(x=variable, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(group=variable, color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=variable, y = Crime,color = "red"))
ggplot(data = uscrimedata, aes(x=variable, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=variable, y = Crime,color = "red"))
ggplot(data = uscrimedata, aes(y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(y = Crime,color = "red"))
ggplot(data = uscrimedata, aes(y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(y = 1304,color = "red"))
ggplot(data = uscrimedata, aes(x=value, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=value,y=1304,color = "red"))
ggplot(data = uscrime_melt, aes(x=value, y=Crime)) +
geom_point() +
facet_wrap(~variable, scales = "free")
ggplot(data = uscrimedata, aes(x=city, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=city,y=1304,color = "red"))
ggplot(data = uscrimedata, aes(x=uscrimedata[1:47], y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=uscrimedata[1:47],y=1304,color = "red"))
ggplot(data = uscrimedata, aes(x=uscrimedata[1:47,], y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=uscrimedata[1:47,],y=1304,color = "red"))
ggplot(data = uscrimedata, aes(x=uscrimedata, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=test_city,aes(x=uscrimedata,y=1304,color = "red"))
ggplot(data = uscrimedata, aes(x=uscrimedata, y=Crime)) +
geom_point(aes(color="black")) +
stat_summary(geom = "point",
mapping = aes(color="green"),
fun.y = "median") +
geom_point(data=new_crime,aes(color = "red"))
#create model with only variables with p value below .1
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
#create model with only variables with p value below .1
crimemodelp.1 <- lm(Crime ~ M + Ed + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
#Try the above model without Po1
crimemodelp.1 <- lm(Crime ~ M + Ed + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
new_crime
#create model with only variables with p value below .05
crimemodelp.05 <- lm(Crime ~ M + Ed + Ineq + Prob, uscrimedata)
summary(crimemodelp.05)
AIC(crimemodelp.05)
BIC(crimemodelp.05)
#check for multicolinearity on chosen model
cormat <- round(cor(uscrimedata),2)
View(cormat)
melted_cormat <- melt(cormat)
View(melted_cormat)
##########check for multicolinearity
#create correlation matrix
cormat <- round(cor(uscrimedata),2)
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
#plot correlation matrix
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
########Test
#create test city data frame
test_city <- c(M = 14.0, So = 0,
Ed = 10.0, Po1 = 12.0,
Po2 = 15.5,LF = 0.640,
M.F = 94.0, Pop = 150,
NW = 1.1, U1 = 0.120,
U2 = 3.6, Wealth = 3200,
Ineq = 20.1, Prob = 0.04,
Time = 39.0)
#plot correlation matrix
ggheatmap +
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
#plot correlation matrix
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
######Remove cross correlated variables from p .1 model
#Try the above model without Po1
crimemodelp.1v2 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1v2)
######Remove cross correlated variables from p .1 model
#Try the above model without education (higher p value of two correlated variables ed and ineq)
crimemodelp.1v2 <- lm(Crime ~ M + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1v2)
AIC(crimemodelp.1v2)
BIC(crimemodelp.1v2)
########Build Model
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(basecrimemodel)
AIC(basecrimemodel)
BIC(basecrimemodel)
#create model with only variables with p value below .1 - chose this one
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
#packages
library(ggplot2)
library(outliers)
library(reshape2)
#set Directory to data path
setwd('/Users/dave/isye6501/Week 5')
#create table of crime data with headers
uscrimedata<-read.table("uscrime.txt", header = TRUE)
#Check class and inspect data
class(uscrimedata)
head(uscrimedata)
summary(uscrimedata)
######Outlier Testing - ultimately decided not to remove and didn't use this code.
#single sided grubs tests
grubbs.test(uscrimedata$Crime, type = 10)
#####Plotting
#plot all variables
uscrime_melt = melt(data=uscrimedata, measure.vars = colnames(uscrimedata[,1:15]))
ggplot(data = uscrime_melt, aes(x=value, y=Crime)) +
geom_point() +
facet_wrap(~variable, scales = "free")
########Build Model
#Create model with all variables
basecrimemodel <- lm(Crime ~., uscrimedata)
summary(basecrimemodel)
AIC(basecrimemodel)
BIC(basecrimemodel)
plot(basecrimemodel$residuals)
plot(basecrimemodel$coefficients)
plot(basecrimemodel$qr)
plot(basecrimemodel$terms)
basecrimemodel
basecrimemodel$coefficients
basecrimemodel$df.residual
summary(basecrimemodel)
AIC(basecrimemodel)
BIC(basecrimemodel)
#create model with only variables with p value below .1 - chose this one
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
#create model with only variables with p value below .05
crimemodelp.05 <- lm(Crime ~ M + Ed + Ineq + Prob, uscrimedata)
summary(crimemodelp.05)
AIC(crimemodelp.05)
BIC(crimemodelp.05)
#create model with only variables with p value below .1 - chose this one
crimemodelp.1 <- lm(Crime ~ M + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
######Remove cross correlated variables from p .1 model
#Try the above model without education (higher p value of two correlated variables ed and ineq) - results are worse, use original.
crimemodelp.1v2 <- lm(Crime ~ M + Ineq + Prob, uscrimedata)
summary(crimemodelp.1v2)
AIC(crimemodelp.1v2)
BIC(crimemodelp.1v2)
#create model with only variables with p value below .1 - chose this one
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
##########check for multicolinearity
#create correlation matrix
cormat <- round(cor(uscrimedata),2)
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
#plot correlation matrix
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4)
########Test
#create test city data frame
test_city <- c(M = 14.0, So = 0,
Ed = 10.0, Po1 = 12.0,
Po2 = 15.5,LF = 0.640,
M.F = 94.0, Pop = 150,
NW = 1.1, U1 = 0.120,
U2 = 3.6, Wealth = 3200,
Ineq = 20.1, Prob = 0.04,
Time = 39.0)
test_city <- as.data.frame(t(test_city))
#predict crime level in test city using the crime model of variables with p value below .1- Result 1304.245 - higher than all but 5 of the samples
new_crime = predict(object=crimemodelp.1, newdata = test_city)
######Remove cross correlated variables from p .1 model
#Try the above model without education (higher p value of two correlated variables ed and ineq) - results are worse, use original.
crimemodelp.1v2 <- lm(Crime ~ M + Po1 + U2 + Ed + Prob, uscrimedata)
summary(crimemodelp.1v2)
AIC(crimemodelp.1v2)
BIC(crimemodelp.1v2)
#create model with only variables with p value below .1 - chose this one
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
######Remove cross correlated variables from p .1 model
#Try the above model without education (higher p value of two correlated variables ed and ineq) - results are worse, use original.
crimemodelp.1v2 <- lm(Crime ~ M + Po1 + Ineq, uscrimedata)
summary(crimemodelp.1v2)
AIC(crimemodelp.1v2)
BIC(crimemodelp.1v2)
+ Prob
+ Prob
######Remove cross correlated variables from p .1 model
#Try the above model without education (higher p value of two correlated variables ed and ineq) - results are worse, use original.
crimemodelp.1v2 <- lm(Crime ~ M + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1v2)
AIC(crimemodelp.1v2)
BIC(crimemodelp.1v2)
#create model with only variables with p value below .1 - chose this one
crimemodelp.1 <- lm(Crime ~ M + Ed + Po1 + U2 + Ineq + Prob, uscrimedata)
summary(crimemodelp.1)
AIC(crimemodelp.1)
BIC(crimemodelp.1)
crimemodelp.1$coefficients
View(uscrimedata)
